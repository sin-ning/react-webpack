

// Babel ES6/JSX Compiler
require('babel-core/register');

const React = require('react');
const ReactDom = require('react-dom');
const ReactRouter = require('react-router');


const match = ReactDom.match;
const Router = ReactRouter.RoutingContext;
const RoutingContext = ReactRouter.RoutingContext;

const routes = require('./routes/index');

///
/// listen server
const path = require('path');
const app = require('express')();

const port = 3000;


const entry = path.join(__dirname, 'entry/');





const routes2 = [
    {
        path: '/',
        getComponent: (nextState, cb) => {
            return require.ensure([], (require) => {
                cb(null, require('../components/Home'))
            })
        },
        indexRoute: {
            getComponent: (nextState, cb) => {
                // Only load if we're logged in
                return require.ensure([], (require) => {
                    cb(null, require('../components/Home'))
                });
            }
        }
    }

];

// app.use(favicon(path.join(__dirname, 'public', '/img/logo.ico')));
app.get('*', (req, res) => {
    // const matchRoutes = React.createElement(Routes, { history: {} });
    // const Routes = React.createElement(Router, { routes: routes2 });
    // console.info(req.url);
    // ReactRouter.match({ routes: routes, location: req.url }, function(err, redirectLocation, renderProps) {
    //     if (err) {
    //         res.status(500).send(err.message)
    //     } else if (redirectLocation) {
    //         res.status(302).redirect(redirectLocation.pathname + redirectLocation.search)
    //     } else if (renderProps) {
    //         res.status(200).send("<!DOCTYPE html>123");
    //     } else {
    //         res.status(404).send('Page Not Found')
    //     }
    // });

    // res.status(200).send("123" );
    res.sendFile(path.join(entry, 'index.html'));
});

app.listen(port);

console.log("server started on port ", port);
